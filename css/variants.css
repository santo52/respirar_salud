.Plate--levelBottom {
  padding-top: 100%;
  width: 100%;
}

.Plate--levelBottom .PlateShadow {
  -webkit-transform: rotate(55deg);
          transform: rotate(55deg);
}

.Plate--levelMiddle {
  padding-top: 75%;
  width: 75%;
}

.Plate--levelMiddle .PlateShadow {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.Plate--levelTop {
  padding-top: 50%;
  width: 50%;
}

.Plate--levelTop .PlateShadow {
  -webkit-transform: rotate(35deg);
          transform: rotate(35deg);
}

.PlateWrapper {
  --shadow-offset-x: 0;
  --shadow-offset-y: 0;
  --plate-scale-x: 1;
  --plate-scale-y: 1;
  --bottom-translate-x: 0;
  --bottom-translate-y: 0;
  --middle-translate-x: 0;
  --middle-translate-y: 0;
  --top-translate-x: 0;
  --top-translate-y: 0;
}

.PlateWrapper.draggable-container--placed .Plate--levelBottom,
.PlateWrapper.draggable-container--placed .Plate--levelMiddle,
.PlateWrapper.draggable-container--placed .Plate--levelTop {
  -webkit-animation-name: plate-placed;
          animation-name: plate-placed;
  -webkit-animation-duration: get-duration();
          animation-duration: get-duration();
  -webkit-animation-timing-function: get-easing();
          animation-timing-function: get-easing();
}

.PlateWrapper.draggable-container--placed .Plate--levelBottom {
  -webkit-animation-delay: get-duration()/2;
          animation-delay: get-duration()/2;
}

.PlateWrapper.draggable-container--placed .Plate--levelMiddle {
  -webkit-animation-delay: get-duration()/4;
          animation-delay: get-duration()/4;
}

.Plate--isDraggable {
  color: get-color(coal, dark);
  -webkit-transition: color get-duration(fast) get-easing();
  transition: color get-duration(fast) get-easing();
}

.Plate--isDraggable:focus, .Plate--isDraggable:hover {
  color: get-color(brand, blue);
}

.Plate--isDraggable .PlateShadowWrapper {
  -webkit-transform: translate3d(var(--shadow-offset-x), var(--shadow-offset-y), 0);
          transform: translate3d(var(--shadow-offset-x), var(--shadow-offset-y), 0);
}

.Plate--isDraggable .PlateShadow::before {
  background-color: currentColor;
  -webkit-animation-duration: get-duration(slow);
          animation-duration: get-duration(slow);
  -webkit-animation-timing-function: get-easing();
          animation-timing-function: get-easing();
}

.Plate--isDraggable .PlateContent {
  background-color: white;
  border: get-border(flexible) solid currentColor;
  -webkit-animation-duration: get-duration(slow);
          animation-duration: get-duration(slow);
  -webkit-animation-timing-function: get-easing();
          animation-timing-function: get-easing();
}

@media screen and (min-width: get-breakpoint()) {
  .Plate--isDraggable .PlateContent {
    border-width: get-border(thick);
  }
}

.Plate--isDraggable.Plate--levelBottom {
  -webkit-transform: translate3d(var(--bottom-translate-x), var(--bottom-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
          transform: translate3d(var(--bottom-translate-x), var(--bottom-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
}

.Plate--isDraggable.Plate--levelBottom:focus .PlateContent,
.Plate--isDraggable.Plate--levelBottom:focus .PlateShadow::before, .Plate--isDraggable.Plate--levelBottom:hover .PlateContent,
.Plate--isDraggable.Plate--levelBottom:hover .PlateShadow::before {
  -webkit-animation-name: plate-small;
          animation-name: plate-small;
}

.Plate--isDraggable.Plate--levelMiddle {
  -webkit-transform: translate3d(var(--middle-translate-x), var(--middle-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
          transform: translate3d(var(--middle-translate-x), var(--middle-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
}

.Plate--isDraggable.Plate--levelMiddle:focus .PlateContent,
.Plate--isDraggable.Plate--levelMiddle:focus .PlateShadow::before, .Plate--isDraggable.Plate--levelMiddle:hover .PlateContent,
.Plate--isDraggable.Plate--levelMiddle:hover .PlateShadow::before {
  -webkit-animation-name: plate-medium;
          animation-name: plate-medium;
}

.Plate--isDraggable.Plate--levelTop {
  -webkit-transform: translate3d(var(--top-translate-x), var(--top-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
          transform: translate3d(var(--top-translate-x), var(--top-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
}

.Plate--isDraggable.Plate--levelTop:focus .PlateContent,
.Plate--isDraggable.Plate--levelTop:focus .PlateShadow::before, .Plate--isDraggable.Plate--levelTop:hover .PlateContent,
.Plate--isDraggable.Plate--levelTop:hover .PlateShadow::before {
  -webkit-animation-name: plate-big;
          animation-name: plate-big;
}

.Plate--isDraggable.draggable-mirror {
  display: none;
}

.draggable-container--placed .Plate--levelBottom .PlateContent,
.draggable-container--placed .Plate--levelBottom .PlateShadow::before {
  -webkit-animation-name: plate-small;
          animation-name: plate-small;
}

.draggable-container--placed .Plate--levelMiddle .PlateContent,
.draggable-container--placed .Plate--levelMiddle .PlateShadow::before {
  -webkit-animation-name: plate-medium;
          animation-name: plate-medium;
}

.draggable-container--placed .Plate--levelTop .PlateContent,
.draggable-container--placed .Plate--levelTop .PlateShadow::before {
  -webkit-animation-name: plate-big;
          animation-name: plate-big;
}
/*# sourceMappingURL=variants.css.map */